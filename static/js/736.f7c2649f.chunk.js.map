{"version":3,"file":"static/js/736.f7c2649f.chunk.js","mappings":"uQAAA,IAAMA,EAAM,mCAECC,EAAsB,WACjC,OAAOC,MAAM,4DAAD,OACkDF,IAE3DG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,OAAT,GACb,EAEYC,EAAiB,SAAAC,GAC5B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,oBAC0CT,EAD1C,oBAGTG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAG,GAAI,OAAIA,CAAJ,GACb,EAEYI,EAAiB,SAAAD,GAC5B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACkDT,EADlD,oBAGTG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAG,GAAI,OAAIA,EAAKK,IAAT,GACb,EAEYC,EAAoB,SAAAC,GAC/B,OAAOX,MAAM,qDAAD,OAC2CF,EAD3C,iCACuEa,EADvE,gCAGTV,MAAK,SAAAW,GAAQ,OAAIA,EAAST,MAAb,IACbF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,OAAT,GACb,EAEYQ,EAAoB,SAAAN,GAC/B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACkDT,EADlD,oBAGTG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,OAAT,GACb,C,qKCtCYS,EAAOC,EAAAA,EAAAA,GAAH,8DAKJC,EAAYD,EAAAA,EAAAA,IAAH,yC,SCyCtB,EAxCa,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAAyBf,GAAzB,iGAEyBC,EAAAA,EAAAA,IAAeD,GAFxC,OAEUa,EAFV,OAIIC,GAAU,OAAID,IAJlB,gDAMIG,QAAQC,IAAR,MANJ,0DADc,uBAAC,SAAD,2BAUdC,CAAUR,EACX,GAAE,CAACA,KAGF,SAACH,EAAD,UACGM,EAAOM,KAAI,SAAAC,GACV,OACE,UAACX,EAAD,YACE,gBACEY,IACED,EAAME,aA1BN,mCA2BiBF,EAAME,aA5BtB,+EA+BHC,IAAI,GACJC,MAAM,MACNC,OAAO,SAET,uBAAIL,EAAMM,QACV,uCAAeN,EAAMO,eAZPP,EAAMpB,GAezB,KAGN,C,sBC/CD,SAAS4B,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAO3C,KAAKsC,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Api/Api.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const KEY = '5838ed03aade1a1b5b4b58af51fb1765';\n\nexport const fetchTrendingMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${KEY}`\n  )\n    .then(res => res.json())\n    .then(data => data.results);\n};\n\nexport const fetchMovieById = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n  )\n    .then(res => res.json())\n    .then(data => data);\n};\n\nexport const fetchMovieCast = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  )\n    .then(res => res.json())\n    .then(data => data.cast);\n};\n\nexport const fetchMovieByQuery = queryValue => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${queryValue}&page=1&include_adult=false`\n  )\n    .then(response => response.json())\n    .then(data => data.results);\n};\n\nexport const fetchMovieReviews = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  )\n    .then(res => res.json())\n    .then(data => data.results);\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const ActorDesc = styled.div`\n  width: 150px;\n`;\n","import { fetchMovieCast } from 'components/Api/Api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { List, ActorDesc } from './Cast.styled';\n\nconst placeHolder = `https://upload.wikimedia.org/wikipedia/commons/8/89/Portrait_Placeholder.png`;\nconst baseImgUrl = `https://image.tmdb.org/t/p/w500/`;\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n\n  useEffect(() => {\n    async function fetchCast(id) {\n      try {\n        const actors = await fetchMovieCast(id);\n\n        setActors([...actors]);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchCast(movieId);\n  }, [movieId]);\n\n  return (\n    <List>\n      {actors.map(actor => {\n        return (\n          <ActorDesc key={actor.id}>\n            <img\n              src={\n                actor.profile_path\n                  ? baseImgUrl + actor.profile_path\n                  : placeHolder\n              }\n              alt=\"\"\n              width=\"100\"\n              height=\"150\"\n            />\n            <p>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n          </ActorDesc>\n        );\n      })}\n    </List>\n  );\n};\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["KEY","fetchTrendingMovies","fetch","then","res","json","data","results","fetchMovieById","id","fetchMovieCast","cast","fetchMovieByQuery","queryValue","response","fetchMovieReviews","List","styled","ActorDesc","movieId","useParams","useState","actors","setActors","useEffect","console","log","fetchCast","map","actor","src","profile_path","alt","width","height","name","character","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}